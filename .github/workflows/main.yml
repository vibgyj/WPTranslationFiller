# This is a basic workflow to help you get started with Actions

name: Upload Release Asset

# # Controls when the action will run. 
# on:
#   # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]
  
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Zip Chrome and Firefox Assets
        run: |
          ls
          ls src
          echo 'Copying Chrome files...'
          cp src/contentScript.js src/chrome/contentScript.js
          cp src/commonTranslate.js src/chrome/commonTranslate.js
          cp src/deeplTranslate.js src/chrome/deeplTranslate.js
          cp src/googleTranslate.js src/chrome/googleTranslate.js
          cp src/microsoftTranslate.js src/chrome/microsoftTranslate.js
          cp src/options.js src/chrome/options.js
          cp src/options.html src/chrome/options.html
          cp src/cute-alert.css src/chrome/cute-alert.css
          cp src/translationFillerStyle.css src/chrome/translationFillerStyle.css
          cp src/jsstore.js src/chrome/jsstore.js
          cp src/jsstore.worker.js src/chrome/jsstore.worker.js
          cp src/database.js src/chrome/database.js
          cp src/consistency.js src/chrome/consistency.js
          cp src/cute-alert.js src/chrome/cute-alert.js
          cp src/jsdiff.js src/chrome/jsdiff.js
          cp src/purify.min.js src/chrome/purify.min.js
          mkdir src/chrome/img
          cp src/img/error.svg src/chrome/img/error.svg
          cp src/img/info.svg src/chrome/img/info.svg
          cp src/img/question.svg src/chrome/img/question.svg
          cp src/img/success.svg src/chrome/img/success.svg
          cp src/img/warning.svg src/chrome/img/warning.svg
          echo 'Copying Firefox files...'
          cp src/contentScript.js src/firefox/contentScript.js
          cp src/commonTranslate.js src/firefox/commonTranslate.js
          cp src/deeplTranslate.js src/firefox/deeplTranslate.js
          cp src/googleTranslate.js src/firefox/googleTranslate.js
          cp src/microsoftTranslate.js src/firefox/microsoftTranslate.js
          cp src/options.js src/firefox/options.js
          cp src/options.html src/firefox/options.html
          cp src/cute-alert.css src/firefox/cute-alert.css
          cp src/translationFillerStyle.css src/firefox/translationFillerStyle.css
          cp src/jsstore.js src/firefox/jsstore.js
          cp src/jsstore.worker.js src/firefox/jsstore.worker.js
          cp src/database.js src/firefox/database.js
          cp src/consistency.js src/firefox/consistency.js
          cp src/cute-alert.js src/firefox/cute-alert.js
          cp src/jsdiff.js src/firefox/jsdiff.js
          cp src/purify.min.js src/firefox/purify.min.js
          mkdir src/firefox/img
          cp src/img/error.svg src/firefox/img/error.svg
          cp src/img/info.svg src/firefox/img/info.svg
          cp src/img/question.svg src/firefox/img/question.svg
          cp src/img/success.svg src/firefox/img/success.svg
          cp src/img/warning.svg src/firefox/img/warning.svg
          echo 'Creating Chrome zip...'
          cd ./src/chrome
          zip -r chrome-extension .
          echo 'Creating Firefox zip...'
          cd ../..
          ls
          cd ./src/firefox
          zip -r firefox-addon .
          ls
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Chrome Extension Release Asset
        id: upload-chrome-extension-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./src/chrome/chrome-extension.zip
          asset_name: chrome-extension.zip
          asset_content_type: application/zip
      - name: Upload Firefox addon Release Asset
        id: upload-firefox-addon-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./src/firefox/firefox-addon.zip
          asset_name: firefox-addon.zip
          asset_content_type: application/zip
